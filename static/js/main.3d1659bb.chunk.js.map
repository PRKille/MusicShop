{"version":3,"sources":["Components/AlbumHeader/AlbumHeader.js","Components/AlbumDetails/AlbumDetails.js","Components/MainHeader/MainHeader.js","Components/MainAlbums/Album.js","Components/MainAlbums/MainAlbum.js","Components/ShoppingCart/ShoppingCart.js","Components/App.js","serviceWorker.js","index.js"],"names":["AlbumHeader","props","className","src","album","image","alt","title","artist","onClick","handleBackToAlbums","AlbumDetails","description","inventory","onAlbumPurchase","id","onAlbumRestock","MainHeader","onShowShoppingCart","type","role","aria-label","cartItemNumber","Album","handleAlbumDelete","onAlbumClick","MainAlbum","Fragment","albums","map","index","key","onAlbumSelection","onSubmit","event","preventDefault","onNewAlbumCreation","target","albumImg","value","albumName","artistName","v4","name","placeholder","ShoppingCart","App","handleAlbumSelection","selectedAlbum","state","albumList","filter","setState","currentSelectedAlbum","showHomePage","handleAddingNewAlbum","newAlbum","newAlbumList","concat","handleAlbumPurchase","newShoppingCartItems","shoppingCartItems","newInventory","updatedAlbum","oldAlbums","handleAlbumRestock","updateAlbumsList","handleShowShoppingCart","showShoppingCart","currentPage","header","length","body","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d1659bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AlbumHeader = (props) => {\r\n  return (\r\n    <div className=\"detailsHeader\">\r\n      <div className=\"columns\">\r\n        <div className=\"column1\">\r\n          <img className=\"albumDetailsImg\" src={props.album.image} alt=\"\"/>\r\n        </div>\r\n        <div className=\"column2\">\r\n          <h1>{props.album.title} by <em>{props.album.artist}</em></h1>\r\n          <button onClick={props.handleBackToAlbums}>Back to Albums</button>\r\n        </div>\r\n        <div className=\"column3\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumHeader.propTypes = {\r\n  album: PropTypes.object\r\n}\r\n\r\nexport default AlbumHeader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AlbumDetails = (props) => {\r\n  \r\n  function hasInventory(count) {\r\n    return count > 0 ? <button onClick={() => props.onAlbumPurchase(props.album.id)}>Buy</button> : <p>Out Of Stock!</p>\r\n  }\r\n\r\n  return (\r\n    <div className=\"description\" >\r\n      <p>Description: {props.album.description}</p>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        {hasInventory(props.album.inventory)}\r\n        <p>Quantity: {props.album.inventory}</p>\r\n        <button onClick={() => props.onAlbumRestock(props.album.id)}>Restock</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumDetails.propTypes = {\r\n  album: PropTypes.object,\r\n  onAlbumPurchase: PropTypes.func,\r\n  onAlbumRestock: PropTypes.func\r\n}\r\n\r\nexport default AlbumDetails;","import React from 'react';\r\n\r\nconst MainHeader = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <button onClick={() => props.onShowShoppingCart()} type=\"button\"><span role=\"img\" aria-label=\"shopping cart\">{props.cartItemNumber > 0 ? `( ${props.cartItemNumber} )` : \"\"}ðŸ‘„</span></button>\r\n      <p id=\"cartItems\"></p>\r\n      <h1>EPICODUS RECORDS</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainHeader;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Album = (props) => {\r\n  return (\r\n    <div className=\"album\" id={props.id}>\r\n      <button onClick={() => props.handleAlbumDelete(props.id)} type=\"button\">Remove</button>\r\n      <img src={props.image} alt=\"\"></img>\r\n      <h5>{props.title} - {props.artist}</h5>\r\n      <button className=\"albumDetailsButton\" onClick={() => props.onAlbumClick(props.id)}>See Details</button>\r\n    </div>\r\n  )\r\n}\r\nAlbum.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string, \r\n  artist: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onAlbumClick: PropTypes.func\r\n}\r\n\r\nexport default Album;\r\n\r\n","import React from 'react';\r\nimport Album from './Album';\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from 'uuid';\r\n\r\nfunction MainAlbum(props){\r\n\r\n  function handleNewAlbumFormSubmit(event) {\r\n    event.preventDefault();\r\n    props.onNewAlbumCreation({\r\n      image: event.target.albumImg.value, \r\n      title: event.target.albumName.value, \r\n      artist: event.target.artistName.value, \r\n      description: event.target.description.value,\r\n      id: v4()});\r\n  }\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"albums\">\r\n        {props.albums.map((album, index) => (\r\n          <Album \r\n            key={album.id}\r\n            title={album.title}\r\n            artist={album.artist}\r\n            image={album.image}\r\n            description={album.description}\r\n            id={album.id}\r\n            onAlbumClick={props.onAlbumSelection}\r\n            handleAlbumDelete={props.handleAlbumDelete} />\r\n        ))}\r\n      </div>\r\n      \r\n      <form className=\"createForm\" onSubmit={handleNewAlbumFormSubmit}>\r\n        <h3>Add New Album</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"albumName\"\r\n          placeholder=\"Album Name\" />\r\n        <input\r\n          type=\"text\"\r\n          name=\"artistName\"\r\n          placeholder=\"Artist Name\" />\r\n        <input\r\n          type=\"text\"\r\n          name=\"albumImg\"\r\n          placeholder=\"Link to Album Cover\" />\r\n          <textarea\r\n          name='description'\r\n          placeholder='Description of album' />\r\n        <button type='submit'>Add Album</button>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nMainAlbum.propTypes = {\r\n  albums: PropTypes.arrayOf(PropTypes.object),\r\n  onNewAlbumCreation: PropTypes.func,\r\n  onAlbumSelection: PropTypes.func\r\n}\r\n\r\nexport default MainAlbum;","import React from 'react';\r\nimport Album from '../MainAlbums/Album'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ShoppingCart(props){\r\n  return (\r\n    <React.Fragment>\r\n      <h1>YOUR ITEMS: </h1>\r\n      {props.albums.map((album, index) => (\r\n        <div key={index}>\r\n          <p>ARTIST: { album.title }</p>\r\n          <p>TITLE: { album.artist} </p>\r\n        </div> \r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  albums: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nexport default ShoppingCart;","import React from 'react';\nimport AlbumHeader from './AlbumHeader/AlbumHeader';\nimport AlbumDetails from './AlbumDetails/AlbumDetails';\nimport MainHeader from './MainHeader/MainHeader';\nimport MainAlbum from './MainAlbums/MainAlbum';\nimport ShoppingCart from './ShoppingCart/ShoppingCart'\nimport '../App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showHomePage: true,\n      showShoppingCart: false,\n      albumList: [\n        {\n          title: \"Dark Side of the Moon\",\n          artist: \"Pink Floyd\",\n          image: \"https://miro.medium.com/max/2480/1*8FkvzbSdSJ4HNxtuZo5kLg.jpeg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066691\"\n        },\n        {\n          title: \"City To City\",\n          artist: \"Gerry Rafferty\",\n          image: \"https://upload.wikimedia.org/wikipedia/en/9/9a/Citytocity.jpg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066692\"\n        },\n        {\n          title: \"Blondes Have More Fun\",\n          artist: \"Rod Stewart\",\n          image: \"https://upload.wikimedia.org/wikipedia/en/3/35/Rod_Stewart_-_Blondes_Have_More_Fun_%28album_cover%29.jpg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066693\"\n        },\n        {\n          title: \"Africa\",\n          artist: \"TOTO\",\n          image: \"https://cdn-s3.allmusic.com/release-covers/500/0000/866/0000866482.jpg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066694\"\n        },\n        {\n          title: \"Can't Buy A Thrill\",\n          artist: \"Steely Dan\",\n          image: \"https://upload.wikimedia.org/wikipedia/en/b/b2/Cant_buy_a_tcant_buy_a_thrill.jpg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066695\"\n        },\n        {\n          title: \"Careless Whisper\",\n          artist: \"George Michael\",\n          image: \"https://img.discogs.com/j_OGjQLde9lJ7Om9Pd6gVHtuIpM=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/R-1296467-1354892016-3591.jpeg.jpg\",\n          description: \"An amazing album!\",\n          inventory: 9,\n          id: \"42066696\"\n        }\n      ],\n      currentSelectedAlbum: {},\n      shoppingCartItems : []\n    }\n  }\n  \n  handleAlbumSelection = (id) => {\n    const selectedAlbum = this.state.albumList.filter(album => album.id === id)[0];\n    this.setState({\n      currentSelectedAlbum: selectedAlbum,\n      showHomePage: false\n    })\n  }\n\n  handleAddingNewAlbum = (newAlbum) => {\n    const newAlbumList = this.state.albumList.concat(newAlbum);\n    this.setState({albumList: newAlbumList})\n  }\n\n  handleBackToAlbums = () => {\n    this.setState({\n      showHomePage: true\n    })\n  }\n\n  handleAlbumPurchase = (id) => {\n    const selectedAlbum = this.state.albumList.filter(album => album.id === id)[0];\n    const newShoppingCartItems = this.state.shoppingCartItems.concat(selectedAlbum);\n    const newInventory = selectedAlbum.inventory -1;\n    const updatedAlbum = {...selectedAlbum, inventory: newInventory};\n    const oldAlbums = this.state.albumList.filter(album => album.id !== id);\n    this.setState({\n      shoppingCartItems: newShoppingCartItems,\n      albumList: [...oldAlbums, updatedAlbum],\n      currentSelectedAlbum: updatedAlbum\n    });\n  }\n  \n  handleAlbumRestock = (id) => {\n    const selectedAlbum = this.state.albumList.filter(album => album.id === id)[0];\n    const newInventory = selectedAlbum.inventory +1;\n    const updatedAlbum = {...selectedAlbum, inventory: newInventory}\n    const oldAlbums = this.state.albumList.filter(album => album.id !== id);\n    this.setState({\n      albumList: [...oldAlbums, updatedAlbum],\n      currentSelectedAlbum: updatedAlbum\n    });\n  }\n\n  handleAlbumDelete = id => {\n    const updateAlbumsList = this.state.albumList.filter(album => album.id !== id);\n    this.setState({\n      albumList: [...updateAlbumsList]\n    })\n  }\n\n  handleShowShoppingCart = () => {\n    this.setState({\n      showShoppingCart: !this.state.showShoppingCart\n    })\n  }\n\n  currentPage = () => {\n    if (this.state.showShoppingCart) {\n      return {\n        header: <MainHeader\n          onShowShoppingCart={this.handleShowShoppingCart}\n          cartItemNumber={this.state.shoppingCartItems.length}/>,\n        body: <ShoppingCart\n          albums={this.state.shoppingCartItems}/>\n      }\n    }\n    else if (this.state.showHomePage) {\n      return {\n        header: <MainHeader \n          onShowShoppingCart={this.handleShowShoppingCart}\n          cartItemNumber={this.state.shoppingCartItems.length}/>,\n        body: <MainAlbum \n            albums={this.state.albumList}\n            onAlbumSelection={this.handleAlbumSelection}\n            onNewAlbumCreation={this.handleAddingNewAlbum}\n            handleAlbumDelete={this.handleAlbumDelete} />\n      }\n    }\n     else {\n      return {\n        header: <AlbumHeader \n          album={this.state.currentSelectedAlbum}\n          handleBackToAlbums={this.handleBackToAlbums}/>,\n        body: <AlbumDetails \n          album={this.state.currentSelectedAlbum}\n          onAlbumPurchase={this.handleAlbumPurchase}\n          onAlbumRestock={this.handleAlbumRestock}/>\n      }\n    }\n  };\n\n  render() {\n    let currentPage = this.currentPage();\n    return (\n      <React.Fragment>\n        {currentPage.header}\n        {currentPage.body}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}